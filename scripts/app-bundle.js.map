{"version":3,"sources":["app.ts","environment.ts","main.ts","resources/index.ts"],"names":[],"mappings":";;;;;;;;;IAKA,IAAa,GAAG;QADhB;YAEE,YAAO,GAAG,cAAc,CAAC;QAe3B,CAAC;QAXC,6BAAe,GAAf,UAAgB,MAA2B,EAAE,MAAc;YACzD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YAErB,MAAM,CAAC,KAAK,GAAG,YAAY,CAAC;YAC5B,MAAM,CAAC,GAAG,CAAC;gBACT,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,+BAA+B,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;gBAC1G,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,8BAA8B,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;aACpG,CAAC,CAAC;YACH,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;QAC9C,CAAC;QAEH,UAAC;IAAD,CAhBA,AAgBC,IAAA;IAhBY,GAAG;QADf,8BAAU;OACE,GAAG,CAgBf;IAhBY,kBAAG;;;;;;ICLhB,kBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;;ICCI,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAdD,8BAcC;;;;;;ICtBD,mBAA0B,MAA8B;IAExD,CAAC;IAFD,8BAEC","file":"app-bundle.js","sourcesContent":["import { autoinject } from 'aurelia-framework';\nimport { RouterConfiguration, Router } from 'aurelia-router';\n\n\n@autoinject\nexport class App {\n  message = 'Hello World!';\n\n  public router: Router;\n\n  configureRouter(config: RouterConfiguration, router: Router): void {\n    this.router = router;\n\n    config.title = 'Droid Worx';\n    config.map([\n      { route: ['', 'home'], name: 'home', moduleId: './resources/elements/aaa/fred', title: 'aaaa', nav: true },\n      { route: 'ssss', name: 'ssss', moduleId: './resources/elements/bbb/zzz', title: 'bbbb', nav: true },\n    ]);\n    config.mapUnknownRoutes('views/home/index');\n  }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}